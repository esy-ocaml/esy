.DELETE_ON_ERROR:

ESY_EXT := $(shell command -v esy 2> /dev/null)

RELEASE_TAG ?= latest
BIN = $(PWD)/node_modules/.bin
PROJECTS = esy esy-build-package

#
# Tools
#

.DEFAULT: help

define HELP

 Run "make bootstrap" if this is your first time with esy development. After
 that you can use "bin/esy" executable to run the development version of esy
 command. Enjoy!

 Common tasks:

   bootstrap           Bootstrap the development environment
   test                Run tests
   clean               Clean build artefacts

 Release tasks:

   publish             Build release and run 'npm publish'
   build-release       Produce an npm package ready to be published (useful for debug)

   bump-major-version  Bump major package version (commits & tags)
   bump-minor-version  Bump minor package version (commits & tags)
   bump-patch-version  Bump patch package version (commits & tags)

 Website tasks:

   site-serve          Serve site locally
   site-publish        Publish site to https://esy.sh (powered by GitHub Pages)
                       Note that the current USER environment variable will be used as a
                       GitHub user used for push. You can override it by setting GIT_USER
                       env: make GIT_USER=anna publish

 Other tasks:

   refmt               Reformal all *.re source with refmt

endef
export HELP

help:
	@echo "$$HELP"

bootstrap:
	@git submodule init
	@git submodule update
	@make build-dev

doctoc:
	@$(BIN)/doctoc --notitle ./README.md

clean:
	@dune clean

build:
	@dune build -j 4 $(TARGETS)

b: build-dev
build-dev:
	@dune build -j 4 $(TARGETS)

#
# Test
#

JEST = $(BIN)/jest --runInBand

test-unit::
	@dune build @runtest

test-e2e::
	@make -C test-e2e test

test-e2e-esyi::
	@make -C test-e2e/pkg-tests test

test-opam::
	$(MAKE) -C __tests__/opam


test::
	@echo "Running test suite: unit tests"
	@$(MAKE) test-unit
	@echo "Running test suite: e2e"
	@$(MAKE) test-e2e
	@echo "Running test suite: e2e installer"
	@$(MAKE) test-e2e-esyi

ci:: test

#
# Release
#

RELEASE_ROOT = _release
RELEASE_FILES = \
	bin/esy \
	bin/fastreplacestring.exe \
	bin/esyInstallRelease.js \
	package.json \
	_build/default/esy-build-package/bin/esyBuildPackageCommand.exe \
	_build/default/esy/bin/esyCommand.exe

build-release:
	@$(MAKE) build
	@$(MAKE) build-release-copy-artifacts

build-release-copy-artifacts:
	@$(MAKE) -j $(RELEASE_FILES:%=$(RELEASE_ROOT)/%)

$(RELEASE_ROOT)/_build/default/esy/bin/esyCommand.exe:
	@mkdir -p $(@D)
	@cp _build/default/esy/bin/esyCommand.exe $(@)

$(RELEASE_ROOT)/_build/default/esy-build-package/bin/esyBuildPackageCommand.exe:
	@mkdir -p $(@D)
	@cp _build/default/esy-build-package/bin/esyBuildPackageCommand.exe $(@)

$(RELEASE_ROOT)/bin/fastreplacestring:
	@mkdir -p $(@D)
	@cp $(PWD)/bin/fastreplacestring $(@)

$(RELEASE_ROOT)/%: $(PWD)/%
	@mkdir -p $(@D)
	@cp $(<) $(@)

publish: build-release
	@(cd $(RELEASE_ROOT) && npm publish --access public --tag $(RELEASE_TAG))
	@git push && git push --tags

bump-major-version:
	@npm version major

bump-minor-version:
	@npm version minor

bump-patch-version:
	@npm version patch

refmt::
	@find $(PROJECTS) -name '*.re' \
		| xargs -n1 esy refmt --in-place --print-width 80

## Website

site-start:
	@$(MAKE) -C site start
site-build:
	@$(MAKE) -C site build
site-publish:
	@$(MAKE) -C site publish
