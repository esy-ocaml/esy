// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`calculating env build _build-type 1`] = `
"
#
# Esy Sandbox
#
export OCAMLPATH=\\"\\"
export OCAMLFIND_DESTDIR=\\"<storePath>/s/app/lib\\"
export OCAMLFIND_LDCONF=\\"ignore\\"
export OCAMLFIND_COMMANDS=\\"ocamlc=ocamlc.opt ocamldep=ocamldep.opt ocamldoc=ocamldoc.opt ocamllex=ocamllex.opt ocamlopt=ocamlopt.opt\\"
export PATH=\\"$PATH\\"
export MAN_PATH=\\"$MAN_PATH\\"

#
# app@0.1.0 (at app)
#
export cur__name=\\"app\\"
export cur__version=\\"0.1.0\\"
export cur__root=\\"<storePath>/b/app\\"
export cur__original_root=\\"<sandboxPath>/app\\"
export cur__depends=\\"\\"
export cur__target_dir=\\"<storePath>/b/app\\"
export cur__install=\\"<storePath>/s/app\\"
export cur__bin=\\"<storePath>/s/app/bin\\"
export cur__sbin=\\"<storePath>/s/app/sbin\\"
export cur__lib=\\"<storePath>/s/app/lib\\"
export cur__man=\\"<storePath>/s/app/man\\"
export cur__doc=\\"<storePath>/s/app/doc\\"
export cur__stublibs=\\"<storePath>/s/app/stublibs\\"
export cur__toplevel=\\"<storePath>/s/app/toplevel\\"
export cur__share=\\"<storePath>/s/app/share\\"
export cur__etc=\\"<storePath>/s/app/etc\\""
`;

exports[`calculating env build in-source 1`] = `
"
#
# Esy Sandbox
#
export OCAMLPATH=\\"\\"
export OCAMLFIND_DESTDIR=\\"<storePath>/s/app/lib\\"
export OCAMLFIND_LDCONF=\\"ignore\\"
export OCAMLFIND_COMMANDS=\\"ocamlc=ocamlc.opt ocamldep=ocamldep.opt ocamldoc=ocamldoc.opt ocamllex=ocamllex.opt ocamlopt=ocamlopt.opt\\"
export PATH=\\"$PATH\\"
export MAN_PATH=\\"$MAN_PATH\\"

#
# app@0.1.0 (at app)
#
export cur__name=\\"app\\"
export cur__version=\\"0.1.0\\"
export cur__root=\\"<storePath>/b/app\\"
export cur__original_root=\\"<sandboxPath>/app\\"
export cur__depends=\\"\\"
export cur__target_dir=\\"<storePath>/b/app\\"
export cur__install=\\"<storePath>/s/app\\"
export cur__bin=\\"<storePath>/s/app/bin\\"
export cur__sbin=\\"<storePath>/s/app/sbin\\"
export cur__lib=\\"<storePath>/s/app/lib\\"
export cur__man=\\"<storePath>/s/app/man\\"
export cur__doc=\\"<storePath>/s/app/doc\\"
export cur__stublibs=\\"<storePath>/s/app/stublibs\\"
export cur__toplevel=\\"<storePath>/s/app/toplevel\\"
export cur__share=\\"<storePath>/s/app/share\\"
export cur__etc=\\"<storePath>/s/app/etc\\""
`;

exports[`calculating env build with (dep with (dep with local export) with local export) 1`] = `
"
#
# Esy Sandbox
#
export OCAMLPATH=\\"<storePath>/i/dep/lib:<storePath>/i/dep-of-dep/lib\\"
export OCAMLFIND_DESTDIR=\\"<storePath>/s/app/lib\\"
export OCAMLFIND_LDCONF=\\"ignore\\"
export OCAMLFIND_COMMANDS=\\"ocamlc=ocamlc.opt ocamldep=ocamldep.opt ocamldoc=ocamldoc.opt ocamllex=ocamllex.opt ocamlopt=ocamlopt.opt\\"
export PATH=\\"<storePath>/i/dep/bin:<storePath>/i/dep-of-dep/bin:$PATH\\"
export MAN_PATH=\\"<storePath>/i/dep/man:<storePath>/i/dep-of-dep/man:$MAN_PATH\\"

#
# app@0.1.0 (at app)
#
export cur__name=\\"app\\"
export cur__version=\\"0.1.0\\"
export cur__root=\\"<sandboxPath>/app\\"
export cur__original_root=\\"<sandboxPath>/app\\"
export cur__depends=\\"dep\\"
export cur__target_dir=\\"<storePath>/b/app\\"
export cur__install=\\"<storePath>/s/app\\"
export cur__bin=\\"<storePath>/s/app/bin\\"
export cur__sbin=\\"<storePath>/s/app/sbin\\"
export cur__lib=\\"<storePath>/s/app/lib\\"
export cur__man=\\"<storePath>/s/app/man\\"
export cur__doc=\\"<storePath>/s/app/doc\\"
export cur__stublibs=\\"<storePath>/s/app/stublibs\\"
export cur__toplevel=\\"<storePath>/s/app/toplevel\\"
export cur__share=\\"<storePath>/s/app/share\\"
export cur__etc=\\"<storePath>/s/app/etc\\"

#
# dep@0.1.0 (at dep)
#
export dep__var=\\"hello\\"

#
# dep-of-dep@0.1.0 (at dep-of-dep)
#
export CAML_LD_LIBRARY_PATH=\\"<storePath>/i/dep-of-dep/stublibs:<storePath>/i/dep-of-dep/lib/stublibs:$CAML_LD_LIBRARY_PATH\\"

#
# dep@0.1.0 (at dep)
#
export CAML_LD_LIBRARY_PATH=\\"<storePath>/i/dep/stublibs:<storePath>/i/dep/lib/stublibs:$CAML_LD_LIBRARY_PATH\\""
`;

exports[`calculating env build with (dep with local export) 1`] = `
"
#
# Esy Sandbox
#
export OCAMLPATH=\\"<storePath>/i/dep/lib\\"
export OCAMLFIND_DESTDIR=\\"<storePath>/s/app/lib\\"
export OCAMLFIND_LDCONF=\\"ignore\\"
export OCAMLFIND_COMMANDS=\\"ocamlc=ocamlc.opt ocamldep=ocamldep.opt ocamldoc=ocamldoc.opt ocamllex=ocamllex.opt ocamlopt=ocamlopt.opt\\"
export PATH=\\"<storePath>/i/dep/bin:$PATH\\"
export MAN_PATH=\\"<storePath>/i/dep/man:$MAN_PATH\\"

#
# app@0.1.0 (at app)
#
export cur__name=\\"app\\"
export cur__version=\\"0.1.0\\"
export cur__root=\\"<sandboxPath>/app\\"
export cur__original_root=\\"<sandboxPath>/app\\"
export cur__depends=\\"dep\\"
export cur__target_dir=\\"<storePath>/b/app\\"
export cur__install=\\"<storePath>/s/app\\"
export cur__bin=\\"<storePath>/s/app/bin\\"
export cur__sbin=\\"<storePath>/s/app/sbin\\"
export cur__lib=\\"<storePath>/s/app/lib\\"
export cur__man=\\"<storePath>/s/app/man\\"
export cur__doc=\\"<storePath>/s/app/doc\\"
export cur__stublibs=\\"<storePath>/s/app/stublibs\\"
export cur__toplevel=\\"<storePath>/s/app/toplevel\\"
export cur__share=\\"<storePath>/s/app/share\\"
export cur__etc=\\"<storePath>/s/app/etc\\"

#
# dep@0.1.0 (at dep)
#
export dep__var=\\"hello\\"
export CAML_LD_LIBRARY_PATH=\\"<storePath>/i/dep/stublibs:<storePath>/i/dep/lib/stublibs:$CAML_LD_LIBRARY_PATH\\""
`;

exports[`calculating env build with (dep with local export) with global export referencing dep built-in 1`] = `
"
#
# Esy Sandbox
#
export OCAMLPATH=\\"<storePath>/i/dep/lib\\"
export OCAMLFIND_DESTDIR=\\"<storePath>/s/app/lib\\"
export OCAMLFIND_LDCONF=\\"ignore\\"
export OCAMLFIND_COMMANDS=\\"ocamlc=ocamlc.opt ocamldep=ocamldep.opt ocamldoc=ocamldoc.opt ocamllex=ocamllex.opt ocamlopt=ocamlopt.opt\\"
export PATH=\\"<storePath>/i/dep/bin:$PATH\\"
export MAN_PATH=\\"<storePath>/i/dep/man:$MAN_PATH\\"

#
# app@0.1.0 (at app)
#
export cur__name=\\"app\\"
export cur__version=\\"0.1.0\\"
export cur__root=\\"<sandboxPath>/app\\"
export cur__original_root=\\"<sandboxPath>/app\\"
export cur__depends=\\"dep\\"
export cur__target_dir=\\"<storePath>/b/app\\"
export cur__install=\\"<storePath>/s/app\\"
export cur__bin=\\"<storePath>/s/app/bin\\"
export cur__sbin=\\"<storePath>/s/app/sbin\\"
export cur__lib=\\"<storePath>/s/app/lib\\"
export cur__man=\\"<storePath>/s/app/man\\"
export cur__doc=\\"<storePath>/s/app/doc\\"
export cur__stublibs=\\"<storePath>/s/app/stublibs\\"
export cur__toplevel=\\"<storePath>/s/app/toplevel\\"
export cur__share=\\"<storePath>/s/app/share\\"
export cur__etc=\\"<storePath>/s/app/etc\\"

#
# dep@0.1.0 (at dep)
#
export CAML_LD_LIBRARY_PATH=\\"<storePath>/i/dep/stublibs:<storePath>/i/dep/lib/stublibs:$CAML_LD_LIBRARY_PATH\\""
`;

exports[`calculating env build with (dep with local export) with global export referencing dep local export 1`] = `
"
#
# Esy Sandbox
#
export OCAMLPATH=\\"<storePath>/i/dep/lib\\"
export OCAMLFIND_DESTDIR=\\"<storePath>/s/app/lib\\"
export OCAMLFIND_LDCONF=\\"ignore\\"
export OCAMLFIND_COMMANDS=\\"ocamlc=ocamlc.opt ocamldep=ocamldep.opt ocamldoc=ocamldoc.opt ocamllex=ocamllex.opt ocamlopt=ocamlopt.opt\\"
export PATH=\\"<storePath>/i/dep/bin:$PATH\\"
export MAN_PATH=\\"<storePath>/i/dep/man:$MAN_PATH\\"

#
# app@0.1.0 (at app)
#
export cur__name=\\"app\\"
export cur__version=\\"0.1.0\\"
export cur__root=\\"<sandboxPath>/app\\"
export cur__original_root=\\"<sandboxPath>/app\\"
export cur__depends=\\"dep\\"
export cur__target_dir=\\"<storePath>/b/app\\"
export cur__install=\\"<storePath>/s/app\\"
export cur__bin=\\"<storePath>/s/app/bin\\"
export cur__sbin=\\"<storePath>/s/app/sbin\\"
export cur__lib=\\"<storePath>/s/app/lib\\"
export cur__man=\\"<storePath>/s/app/man\\"
export cur__doc=\\"<storePath>/s/app/doc\\"
export cur__stublibs=\\"<storePath>/s/app/stublibs\\"
export cur__toplevel=\\"<storePath>/s/app/toplevel\\"
export cur__share=\\"<storePath>/s/app/share\\"
export cur__etc=\\"<storePath>/s/app/etc\\"

#
# dep@0.1.0 (at dep)
#
export dep__var=\\"hello\\"
export CAML_LD_LIBRARY_PATH=\\"<storePath>/i/dep/stublibs:<storePath>/i/dep/lib/stublibs:$CAML_LD_LIBRARY_PATH\\""
`;

exports[`calculating env build with (dep with local export) with local export referencing dep built-in 1`] = `
"
#
# Esy Sandbox
#
export OCAMLPATH=\\"<storePath>/i/dep/lib\\"
export OCAMLFIND_DESTDIR=\\"<storePath>/s/app/lib\\"
export OCAMLFIND_LDCONF=\\"ignore\\"
export OCAMLFIND_COMMANDS=\\"ocamlc=ocamlc.opt ocamldep=ocamldep.opt ocamldoc=ocamldoc.opt ocamllex=ocamllex.opt ocamlopt=ocamlopt.opt\\"
export PATH=\\"<storePath>/i/dep/bin:$PATH\\"
export MAN_PATH=\\"<storePath>/i/dep/man:$MAN_PATH\\"

#
# app@0.1.0 (at app)
#
export cur__name=\\"app\\"
export cur__version=\\"0.1.0\\"
export cur__root=\\"<sandboxPath>/app\\"
export cur__original_root=\\"<sandboxPath>/app\\"
export cur__depends=\\"dep\\"
export cur__target_dir=\\"<storePath>/b/app\\"
export cur__install=\\"<storePath>/s/app\\"
export cur__bin=\\"<storePath>/s/app/bin\\"
export cur__sbin=\\"<storePath>/s/app/sbin\\"
export cur__lib=\\"<storePath>/s/app/lib\\"
export cur__man=\\"<storePath>/s/app/man\\"
export cur__doc=\\"<storePath>/s/app/doc\\"
export cur__stublibs=\\"<storePath>/s/app/stublibs\\"
export cur__toplevel=\\"<storePath>/s/app/toplevel\\"
export cur__share=\\"<storePath>/s/app/share\\"
export cur__etc=\\"<storePath>/s/app/etc\\"

#
# dep@0.1.0 (at dep)
#
export CAML_LD_LIBRARY_PATH=\\"<storePath>/i/dep/stublibs:<storePath>/i/dep/lib/stublibs:$CAML_LD_LIBRARY_PATH\\""
`;

exports[`calculating env build with (dep with local export) with local export referencing dep local export 1`] = `
"
#
# Esy Sandbox
#
export OCAMLPATH=\\"<storePath>/i/dep/lib\\"
export OCAMLFIND_DESTDIR=\\"<storePath>/s/app/lib\\"
export OCAMLFIND_LDCONF=\\"ignore\\"
export OCAMLFIND_COMMANDS=\\"ocamlc=ocamlc.opt ocamldep=ocamldep.opt ocamldoc=ocamldoc.opt ocamllex=ocamllex.opt ocamlopt=ocamlopt.opt\\"
export PATH=\\"<storePath>/i/dep/bin:$PATH\\"
export MAN_PATH=\\"<storePath>/i/dep/man:$MAN_PATH\\"

#
# app@0.1.0 (at app)
#
export cur__name=\\"app\\"
export cur__version=\\"0.1.0\\"
export cur__root=\\"<sandboxPath>/app\\"
export cur__original_root=\\"<sandboxPath>/app\\"
export cur__depends=\\"dep\\"
export cur__target_dir=\\"<storePath>/b/app\\"
export cur__install=\\"<storePath>/s/app\\"
export cur__bin=\\"<storePath>/s/app/bin\\"
export cur__sbin=\\"<storePath>/s/app/sbin\\"
export cur__lib=\\"<storePath>/s/app/lib\\"
export cur__man=\\"<storePath>/s/app/man\\"
export cur__doc=\\"<storePath>/s/app/doc\\"
export cur__stublibs=\\"<storePath>/s/app/stublibs\\"
export cur__toplevel=\\"<storePath>/s/app/toplevel\\"
export cur__share=\\"<storePath>/s/app/share\\"
export cur__etc=\\"<storePath>/s/app/etc\\"

#
# dep@0.1.0 (at dep)
#
export dep__var=\\"hello\\"
export CAML_LD_LIBRARY_PATH=\\"<storePath>/i/dep/stublibs:<storePath>/i/dep/lib/stublibs:$CAML_LD_LIBRARY_PATH\\""
`;

exports[`calculating env build with global export referencing built-in (cur-version) 1`] = `
"
#
# Esy Sandbox
#
export OCAMLPATH=\\"\\"
export OCAMLFIND_DESTDIR=\\"<storePath>/s/app/lib\\"
export OCAMLFIND_LDCONF=\\"ignore\\"
export OCAMLFIND_COMMANDS=\\"ocamlc=ocamlc.opt ocamldep=ocamldep.opt ocamldoc=ocamldoc.opt ocamllex=ocamllex.opt ocamlopt=ocamlopt.opt\\"
export PATH=\\"$PATH\\"
export MAN_PATH=\\"$MAN_PATH\\"

#
# app@0.1.0 (at app)
#
export cur__name=\\"app\\"
export cur__version=\\"0.1.0\\"
export cur__root=\\"<sandboxPath>/app\\"
export cur__original_root=\\"<sandboxPath>/app\\"
export cur__depends=\\"\\"
export cur__target_dir=\\"<storePath>/b/app\\"
export cur__install=\\"<storePath>/s/app\\"
export cur__bin=\\"<storePath>/s/app/bin\\"
export cur__sbin=\\"<storePath>/s/app/sbin\\"
export cur__lib=\\"<storePath>/s/app/lib\\"
export cur__man=\\"<storePath>/s/app/man\\"
export cur__doc=\\"<storePath>/s/app/doc\\"
export cur__stublibs=\\"<storePath>/s/app/stublibs\\"
export cur__toplevel=\\"<storePath>/s/app/toplevel\\"
export cur__share=\\"<storePath>/s/app/share\\"
export cur__etc=\\"<storePath>/s/app/etc\\""
`;

exports[`calculating env build with global export referencing built-in 1`] = `
"
#
# Esy Sandbox
#
export OCAMLPATH=\\"\\"
export OCAMLFIND_DESTDIR=\\"<storePath>/s/app/lib\\"
export OCAMLFIND_LDCONF=\\"ignore\\"
export OCAMLFIND_COMMANDS=\\"ocamlc=ocamlc.opt ocamldep=ocamldep.opt ocamldoc=ocamldoc.opt ocamllex=ocamllex.opt ocamlopt=ocamlopt.opt\\"
export PATH=\\"$PATH\\"
export MAN_PATH=\\"$MAN_PATH\\"

#
# app@0.1.0 (at app)
#
export cur__name=\\"app\\"
export cur__version=\\"0.1.0\\"
export cur__root=\\"<sandboxPath>/app\\"
export cur__original_root=\\"<sandboxPath>/app\\"
export cur__depends=\\"\\"
export cur__target_dir=\\"<storePath>/b/app\\"
export cur__install=\\"<storePath>/s/app\\"
export cur__bin=\\"<storePath>/s/app/bin\\"
export cur__sbin=\\"<storePath>/s/app/sbin\\"
export cur__lib=\\"<storePath>/s/app/lib\\"
export cur__man=\\"<storePath>/s/app/man\\"
export cur__doc=\\"<storePath>/s/app/doc\\"
export cur__stublibs=\\"<storePath>/s/app/stublibs\\"
export cur__toplevel=\\"<storePath>/s/app/toplevel\\"
export cur__share=\\"<storePath>/s/app/share\\"
export cur__etc=\\"<storePath>/s/app/etc\\""
`;

exports[`calculating env build with global exports 1`] = `
"
#
# Esy Sandbox
#
export OCAMLPATH=\\"\\"
export OCAMLFIND_DESTDIR=\\"<storePath>/s/app/lib\\"
export OCAMLFIND_LDCONF=\\"ignore\\"
export OCAMLFIND_COMMANDS=\\"ocamlc=ocamlc.opt ocamldep=ocamldep.opt ocamldoc=ocamldoc.opt ocamllex=ocamllex.opt ocamlopt=ocamlopt.opt\\"
export PATH=\\"$PATH\\"
export MAN_PATH=\\"$MAN_PATH\\"

#
# app@0.1.0 (at app)
#
export cur__name=\\"app\\"
export cur__version=\\"0.1.0\\"
export cur__root=\\"<sandboxPath>/app\\"
export cur__original_root=\\"<sandboxPath>/app\\"
export cur__depends=\\"\\"
export cur__target_dir=\\"<storePath>/b/app\\"
export cur__install=\\"<storePath>/s/app\\"
export cur__bin=\\"<storePath>/s/app/bin\\"
export cur__sbin=\\"<storePath>/s/app/sbin\\"
export cur__lib=\\"<storePath>/s/app/lib\\"
export cur__man=\\"<storePath>/s/app/man\\"
export cur__doc=\\"<storePath>/s/app/doc\\"
export cur__stublibs=\\"<storePath>/s/app/stublibs\\"
export cur__toplevel=\\"<storePath>/s/app/toplevel\\"
export cur__share=\\"<storePath>/s/app/share\\"
export cur__etc=\\"<storePath>/s/app/etc\\""
`;

exports[`calculating env build with local exports 1`] = `
"
#
# Esy Sandbox
#
export OCAMLPATH=\\"\\"
export OCAMLFIND_DESTDIR=\\"<storePath>/s/app/lib\\"
export OCAMLFIND_LDCONF=\\"ignore\\"
export OCAMLFIND_COMMANDS=\\"ocamlc=ocamlc.opt ocamldep=ocamldep.opt ocamldoc=ocamldoc.opt ocamllex=ocamllex.opt ocamlopt=ocamlopt.opt\\"
export PATH=\\"$PATH\\"
export MAN_PATH=\\"$MAN_PATH\\"

#
# app@0.1.0 (at app)
#
export cur__name=\\"app\\"
export cur__version=\\"0.1.0\\"
export cur__root=\\"<sandboxPath>/app\\"
export cur__original_root=\\"<sandboxPath>/app\\"
export cur__depends=\\"\\"
export cur__target_dir=\\"<storePath>/b/app\\"
export cur__install=\\"<storePath>/s/app\\"
export cur__bin=\\"<storePath>/s/app/bin\\"
export cur__sbin=\\"<storePath>/s/app/sbin\\"
export cur__lib=\\"<storePath>/s/app/lib\\"
export cur__man=\\"<storePath>/s/app/man\\"
export cur__doc=\\"<storePath>/s/app/doc\\"
export cur__stublibs=\\"<storePath>/s/app/stublibs\\"
export cur__toplevel=\\"<storePath>/s/app/toplevel\\"
export cur__share=\\"<storePath>/s/app/share\\"
export cur__etc=\\"<storePath>/s/app/etc\\""
`;

exports[`calculating env build with no exports 1`] = `
"
#
# Esy Sandbox
#
export OCAMLPATH=\\"\\"
export OCAMLFIND_DESTDIR=\\"<storePath>/s/app/lib\\"
export OCAMLFIND_LDCONF=\\"ignore\\"
export OCAMLFIND_COMMANDS=\\"ocamlc=ocamlc.opt ocamldep=ocamldep.opt ocamldoc=ocamldoc.opt ocamllex=ocamllex.opt ocamlopt=ocamlopt.opt\\"
export PATH=\\"$PATH\\"
export MAN_PATH=\\"$MAN_PATH\\"

#
# app@0.1.0 (at app)
#
export cur__name=\\"app\\"
export cur__version=\\"0.1.0\\"
export cur__root=\\"<sandboxPath>/app\\"
export cur__original_root=\\"<sandboxPath>/app\\"
export cur__depends=\\"\\"
export cur__target_dir=\\"<storePath>/b/app\\"
export cur__install=\\"<storePath>/s/app\\"
export cur__bin=\\"<storePath>/s/app/bin\\"
export cur__sbin=\\"<storePath>/s/app/sbin\\"
export cur__lib=\\"<storePath>/s/app/lib\\"
export cur__man=\\"<storePath>/s/app/man\\"
export cur__doc=\\"<storePath>/s/app/doc\\"
export cur__stublibs=\\"<storePath>/s/app/stublibs\\"
export cur__toplevel=\\"<storePath>/s/app/toplevel\\"
export cur__share=\\"<storePath>/s/app/share\\"
export cur__etc=\\"<storePath>/s/app/etc\\""
`;

exports[`calculating env concatenating global exports (same level exports + package itself) 1`] = `
"
#
# Esy Sandbox
#
export OCAMLPATH=\\"<storePath>/i/lwt/lib:<storePath>/i/ocamlfind/lib:<storePath>/i/ocaml/lib\\"
export OCAMLFIND_DESTDIR=\\"<storePath>/s/app/lib\\"
export OCAMLFIND_LDCONF=\\"ignore\\"
export OCAMLFIND_COMMANDS=\\"ocamlc=ocamlc.opt ocamldep=ocamldep.opt ocamldoc=ocamldoc.opt ocamllex=ocamllex.opt ocamlopt=ocamlopt.opt\\"
export PATH=\\"<storePath>/i/lwt/bin:<storePath>/i/ocamlfind/bin:<storePath>/i/ocaml/bin:$PATH\\"
export MAN_PATH=\\"<storePath>/i/lwt/man:<storePath>/i/ocamlfind/man:<storePath>/i/ocaml/man:$MAN_PATH\\"

#
# app@0.1.0 (at app)
#
export cur__name=\\"app\\"
export cur__version=\\"0.1.0\\"
export cur__root=\\"<sandboxPath>/app\\"
export cur__original_root=\\"<sandboxPath>/app\\"
export cur__depends=\\"ocamlfind lwt\\"
export cur__target_dir=\\"<storePath>/b/app\\"
export cur__install=\\"<storePath>/s/app\\"
export cur__bin=\\"<storePath>/s/app/bin\\"
export cur__sbin=\\"<storePath>/s/app/sbin\\"
export cur__lib=\\"<storePath>/s/app/lib\\"
export cur__man=\\"<storePath>/s/app/man\\"
export cur__doc=\\"<storePath>/s/app/doc\\"
export cur__stublibs=\\"<storePath>/s/app/stublibs\\"
export cur__toplevel=\\"<storePath>/s/app/toplevel\\"
export cur__share=\\"<storePath>/s/app/share\\"
export cur__etc=\\"<storePath>/s/app/etc\\"

#
# ocaml@0.1.0 (at ocaml)
#
export CAML_LD_LIBRARY_PATH=\\"\${ocaml.lib / 'ocaml'}\\"

#
# ocamlfind@0.1.0 (at ocamlfind)
#
export CAML_LD_LIBRARY_PATH=\\"<storePath>/i/ocamlfind/lib/ocaml:$CAML_LD_LIBRARY_PATH\\"

#
# lwt@0.1.0 (at lwt)
#
export CAML_LD_LIBRARY_PATH=\\"<storePath>/i/lwt/lib/ocaml:$CAML_LD_LIBRARY_PATH\\""
`;

exports[`calculating env concatenating global exports (same level exports) 1`] = `
"
#
# Esy Sandbox
#
export OCAMLPATH=\\"<storePath>/i/lwt/lib:<storePath>/i/ocamlfind/lib:<storePath>/i/ocaml/lib\\"
export OCAMLFIND_DESTDIR=\\"<storePath>/s/app/lib\\"
export OCAMLFIND_LDCONF=\\"ignore\\"
export OCAMLFIND_COMMANDS=\\"ocamlc=ocamlc.opt ocamldep=ocamldep.opt ocamldoc=ocamldoc.opt ocamllex=ocamllex.opt ocamlopt=ocamlopt.opt\\"
export PATH=\\"<storePath>/i/lwt/bin:<storePath>/i/ocamlfind/bin:<storePath>/i/ocaml/bin:$PATH\\"
export MAN_PATH=\\"<storePath>/i/lwt/man:<storePath>/i/ocamlfind/man:<storePath>/i/ocaml/man:$MAN_PATH\\"

#
# app@0.1.0 (at app)
#
export cur__name=\\"app\\"
export cur__version=\\"0.1.0\\"
export cur__root=\\"<sandboxPath>/app\\"
export cur__original_root=\\"<sandboxPath>/app\\"
export cur__depends=\\"ocamlfind lwt\\"
export cur__target_dir=\\"<storePath>/b/app\\"
export cur__install=\\"<storePath>/s/app\\"
export cur__bin=\\"<storePath>/s/app/bin\\"
export cur__sbin=\\"<storePath>/s/app/sbin\\"
export cur__lib=\\"<storePath>/s/app/lib\\"
export cur__man=\\"<storePath>/s/app/man\\"
export cur__doc=\\"<storePath>/s/app/doc\\"
export cur__stublibs=\\"<storePath>/s/app/stublibs\\"
export cur__toplevel=\\"<storePath>/s/app/toplevel\\"
export cur__share=\\"<storePath>/s/app/share\\"
export cur__etc=\\"<storePath>/s/app/etc\\"

#
# ocaml@0.1.0 (at ocaml)
#
export CAML_LD_LIBRARY_PATH=\\"\${ocaml.lib / 'ocaml'}\\"

#
# ocamlfind@0.1.0 (at ocamlfind)
#
export CAML_LD_LIBRARY_PATH=\\"<storePath>/i/ocamlfind/lib/ocaml:$CAML_LD_LIBRARY_PATH\\"

#
# lwt@0.1.0 (at lwt)
#
export CAML_LD_LIBRARY_PATH=\\"<storePath>/i/lwt/lib/ocaml:$CAML_LD_LIBRARY_PATH\\""
`;

exports[`calculating env concatenating global exports 1`] = `
"
#
# Esy Sandbox
#
export OCAMLPATH=\\"<storePath>/i/ocamlfind/lib:<storePath>/i/ocaml/lib\\"
export OCAMLFIND_DESTDIR=\\"<storePath>/s/app/lib\\"
export OCAMLFIND_LDCONF=\\"ignore\\"
export OCAMLFIND_COMMANDS=\\"ocamlc=ocamlc.opt ocamldep=ocamldep.opt ocamldoc=ocamldoc.opt ocamllex=ocamllex.opt ocamlopt=ocamlopt.opt\\"
export PATH=\\"<storePath>/i/ocamlfind/bin:<storePath>/i/ocaml/bin:$PATH\\"
export MAN_PATH=\\"<storePath>/i/ocamlfind/man:<storePath>/i/ocaml/man:$MAN_PATH\\"

#
# app@0.1.0 (at app)
#
export cur__name=\\"app\\"
export cur__version=\\"0.1.0\\"
export cur__root=\\"<sandboxPath>/app\\"
export cur__original_root=\\"<sandboxPath>/app\\"
export cur__depends=\\"ocamlfind ocaml\\"
export cur__target_dir=\\"<storePath>/b/app\\"
export cur__install=\\"<storePath>/s/app\\"
export cur__bin=\\"<storePath>/s/app/bin\\"
export cur__sbin=\\"<storePath>/s/app/sbin\\"
export cur__lib=\\"<storePath>/s/app/lib\\"
export cur__man=\\"<storePath>/s/app/man\\"
export cur__doc=\\"<storePath>/s/app/doc\\"
export cur__stublibs=\\"<storePath>/s/app/stublibs\\"
export cur__toplevel=\\"<storePath>/s/app/toplevel\\"
export cur__share=\\"<storePath>/s/app/share\\"
export cur__etc=\\"<storePath>/s/app/etc\\"

#
# ocaml@0.1.0 (at ocaml)
#
export CAML_LD_LIBRARY_PATH=\\"\${ocaml.lib / 'ocaml'}\\"

#
# ocamlfind@0.1.0 (at ocamlfind)
#
export CAML_LD_LIBRARY_PATH=\\"<storePath>/i/ocamlfind/lib/ocaml:$CAML_LD_LIBRARY_PATH\\""
`;

exports[`calculating env exposing own $cur__bin in $PATH 1`] = `"<storePath>/i/dep/bin:"`;

exports[`calculating env exposing own $cur__bin in $PATH 2`] = `"<storePath>/i/dep/lib"`;

exports[`calculating env invalid syntax in a build command 1`] = `
Array [
  Object {
    "origin": BuildSpec { id: "app" },
    "reason": "Invalid expression syntax: Expected (}) (at 5 character)",
  },
]
`;

exports[`calculating env invalid syntax in an install command 1`] = `
Array [
  Object {
    "origin": BuildSpec { id: "app" },
    "reason": "Invalid expression syntax: Expected (}) (at 5 character)",
  },
]
`;

exports[`calculating env invalid syntax in exportedEnv 1`] = `
Array [
  Object {
    "origin": BuildSpec { id: "app" },
    "reason": "Invalid expression syntax: Expected (}) (at 5 character)",
  },
]
`;

exports[`calculating env override a built-in variable 1`] = `
Array [
  Object {
    "origin": BuildSpec { id: "dep" },
    "reason": "Package dep exports environment variable cur__target_dir
which conflicts with the built-in environment variable of the same name.",
  },
]
`;

exports[`calculating env override an exclusive variable 1`] = `
Array [
  Object {
    "origin": BuildSpec { id: "dep" },
    "reason": "Package dep exports environment variable X
which conflicts with the environment variable of the same name
exported from package depOfDep marked as exclusive.",
  },
]
`;

exports[`calculating env package with dot in its name 1`] = `
"
#
# Esy Sandbox
#
export OCAMLPATH=\\"\\"
export OCAMLFIND_DESTDIR=\\"<storePath>/s/app.js/lib\\"
export OCAMLFIND_LDCONF=\\"ignore\\"
export OCAMLFIND_COMMANDS=\\"ocamlc=ocamlc.opt ocamldep=ocamldep.opt ocamldoc=ocamldoc.opt ocamllex=ocamllex.opt ocamlopt=ocamlopt.opt\\"
export PATH=\\"$PATH\\"
export MAN_PATH=\\"$MAN_PATH\\"

#
# app.js@0.1.0 (at app.js)
#
export cur__name=\\"app.js\\"
export cur__version=\\"0.1.0\\"
export cur__root=\\"<sandboxPath>/app.js\\"
export cur__original_root=\\"<sandboxPath>/app.js\\"
export cur__depends=\\"\\"
export cur__target_dir=\\"<storePath>/b/app.js\\"
export cur__install=\\"<storePath>/s/app.js\\"
export cur__bin=\\"<storePath>/s/app.js/bin\\"
export cur__sbin=\\"<storePath>/s/app.js/sbin\\"
export cur__lib=\\"<storePath>/s/app.js/lib\\"
export cur__man=\\"<storePath>/s/app.js/man\\"
export cur__doc=\\"<storePath>/s/app.js/doc\\"
export cur__stublibs=\\"<storePath>/s/app.js/stublibs\\"
export cur__toplevel=\\"<storePath>/s/app.js/toplevel\\"
export cur__share=\\"<storePath>/s/app.js/share\\"
export cur__etc=\\"<storePath>/s/app.js/etc\\""
`;

exports[`calculating env set an exclusive variable which was previously defined 1`] = `
Array [
  Object {
    "origin": BuildSpec { id: "dep" },
    "reason": "Package dep exports environment variable X
marked with exclusive which conflicts with the environment variable
of the same name exported from package depOfDep.",
  },
]
`;

exports[`calculating env unknown reference in a build command 1`] = `
Array [
  Object {
    "origin": BuildSpec { id: "app" },
    "reason": "Unknown reference found: unknown",
  },
]
`;

exports[`calculating env unknown reference in an install command 1`] = `
Array [
  Object {
    "origin": BuildSpec { id: "app" },
    "reason": "Unknown reference found: unknown",
  },
]
`;

exports[`calculating env unknown reference in exportedEnv 1`] = `
Array [
  Object {
    "origin": BuildSpec { id: "app" },
    "reason": "Unknown reference found: unknown",
  },
]
`;

exports[`calculating scope _build build-type 1`] = `
Map {
  "app" => Map {
    "name" => Object {
      "name": "name",
      "origin": BuildSpec { id: "app" },
      "value": "app",
    },
    "version" => Object {
      "name": "version",
      "origin": BuildSpec { id: "app" },
      "value": "0.1.0",
    },
    "root" => Object {
      "name": "root",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/b/app",
    },
    "original_root" => Object {
      "name": "original_root",
      "origin": BuildSpec { id: "app" },
      "value": "<sandboxPath>/app",
    },
    "depends" => Object {
      "name": "depends",
      "origin": BuildSpec { id: "app" },
      "value": "",
    },
    "target_dir" => Object {
      "name": "target_dir",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/b/app",
    },
    "install" => Object {
      "name": "install",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app",
    },
    "bin" => Object {
      "name": "bin",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/bin",
    },
    "sbin" => Object {
      "name": "sbin",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/sbin",
    },
    "lib" => Object {
      "name": "lib",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/lib",
    },
    "man" => Object {
      "name": "man",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/man",
    },
    "doc" => Object {
      "name": "doc",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/doc",
    },
    "stublibs" => Object {
      "name": "stublibs",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/stublibs",
    },
    "toplevel" => Object {
      "name": "toplevel",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/toplevel",
    },
    "share" => Object {
      "name": "share",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/share",
    },
    "etc" => Object {
      "name": "etc",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/etc",
    },
  },
  "self" => Map {
    "name" => Object {
      "name": "name",
      "origin": BuildSpec { id: "app" },
      "value": "app",
    },
    "version" => Object {
      "name": "version",
      "origin": BuildSpec { id: "app" },
      "value": "0.1.0",
    },
    "root" => Object {
      "name": "root",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/b/app",
    },
    "original_root" => Object {
      "name": "original_root",
      "origin": BuildSpec { id: "app" },
      "value": "<sandboxPath>/app",
    },
    "depends" => Object {
      "name": "depends",
      "origin": BuildSpec { id: "app" },
      "value": "",
    },
    "target_dir" => Object {
      "name": "target_dir",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/b/app",
    },
    "install" => Object {
      "name": "install",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app",
    },
    "bin" => Object {
      "name": "bin",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/bin",
    },
    "sbin" => Object {
      "name": "sbin",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/sbin",
    },
    "lib" => Object {
      "name": "lib",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/lib",
    },
    "man" => Object {
      "name": "man",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/man",
    },
    "doc" => Object {
      "name": "doc",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/doc",
    },
    "stublibs" => Object {
      "name": "stublibs",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/stublibs",
    },
    "toplevel" => Object {
      "name": "toplevel",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/toplevel",
    },
    "share" => Object {
      "name": "share",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/share",
    },
    "etc" => Object {
      "name": "etc",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/etc",
    },
  },
}
`;

exports[`calculating scope has deps 1`] = `
Map {
  "dep" => Map {
    "name" => Object {
      "name": "name",
      "origin": BuildSpec { id: "dep" },
      "value": "dep",
    },
    "version" => Object {
      "name": "version",
      "origin": BuildSpec { id: "dep" },
      "value": "0.1.0",
    },
    "root" => Object {
      "name": "root",
      "origin": BuildSpec { id: "dep" },
      "value": "<sandboxPath>/dep",
    },
    "original_root" => Object {
      "name": "original_root",
      "origin": BuildSpec { id: "dep" },
      "value": "<sandboxPath>/dep",
    },
    "depends" => Object {
      "name": "depends",
      "origin": BuildSpec { id: "dep" },
      "value": "depOfDep",
    },
    "target_dir" => Object {
      "name": "target_dir",
      "origin": BuildSpec { id: "dep" },
      "value": "<storePath>/b/dep",
    },
    "install" => Object {
      "name": "install",
      "origin": BuildSpec { id: "dep" },
      "value": "<storePath>/i/dep",
    },
    "bin" => Object {
      "name": "bin",
      "origin": BuildSpec { id: "dep" },
      "value": "<storePath>/i/dep/bin",
    },
    "sbin" => Object {
      "name": "sbin",
      "origin": BuildSpec { id: "dep" },
      "value": "<storePath>/i/dep/sbin",
    },
    "lib" => Object {
      "name": "lib",
      "origin": BuildSpec { id: "dep" },
      "value": "<storePath>/i/dep/lib",
    },
    "man" => Object {
      "name": "man",
      "origin": BuildSpec { id: "dep" },
      "value": "<storePath>/i/dep/man",
    },
    "doc" => Object {
      "name": "doc",
      "origin": BuildSpec { id: "dep" },
      "value": "<storePath>/i/dep/doc",
    },
    "stublibs" => Object {
      "name": "stublibs",
      "origin": BuildSpec { id: "dep" },
      "value": "<storePath>/i/dep/stublibs",
    },
    "toplevel" => Object {
      "name": "toplevel",
      "origin": BuildSpec { id: "dep" },
      "value": "<storePath>/i/dep/toplevel",
    },
    "share" => Object {
      "name": "share",
      "origin": BuildSpec { id: "dep" },
      "value": "<storePath>/i/dep/share",
    },
    "etc" => Object {
      "name": "etc",
      "origin": BuildSpec { id: "dep" },
      "value": "<storePath>/i/dep/etc",
    },
  },
  "app" => Map {
    "name" => Object {
      "name": "name",
      "origin": BuildSpec { id: "app" },
      "value": "app",
    },
    "version" => Object {
      "name": "version",
      "origin": BuildSpec { id: "app" },
      "value": "0.1.0",
    },
    "root" => Object {
      "name": "root",
      "origin": BuildSpec { id: "app" },
      "value": "<sandboxPath>/app",
    },
    "original_root" => Object {
      "name": "original_root",
      "origin": BuildSpec { id: "app" },
      "value": "<sandboxPath>/app",
    },
    "depends" => Object {
      "name": "depends",
      "origin": BuildSpec { id: "app" },
      "value": "dep",
    },
    "target_dir" => Object {
      "name": "target_dir",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/b/app",
    },
    "install" => Object {
      "name": "install",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app",
    },
    "bin" => Object {
      "name": "bin",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/bin",
    },
    "sbin" => Object {
      "name": "sbin",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/sbin",
    },
    "lib" => Object {
      "name": "lib",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/lib",
    },
    "man" => Object {
      "name": "man",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/man",
    },
    "doc" => Object {
      "name": "doc",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/doc",
    },
    "stublibs" => Object {
      "name": "stublibs",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/stublibs",
    },
    "toplevel" => Object {
      "name": "toplevel",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/toplevel",
    },
    "share" => Object {
      "name": "share",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/share",
    },
    "etc" => Object {
      "name": "etc",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/etc",
    },
  },
  "self" => Map {
    "name" => Object {
      "name": "name",
      "origin": BuildSpec { id: "app" },
      "value": "app",
    },
    "version" => Object {
      "name": "version",
      "origin": BuildSpec { id: "app" },
      "value": "0.1.0",
    },
    "root" => Object {
      "name": "root",
      "origin": BuildSpec { id: "app" },
      "value": "<sandboxPath>/app",
    },
    "original_root" => Object {
      "name": "original_root",
      "origin": BuildSpec { id: "app" },
      "value": "<sandboxPath>/app",
    },
    "depends" => Object {
      "name": "depends",
      "origin": BuildSpec { id: "app" },
      "value": "dep",
    },
    "target_dir" => Object {
      "name": "target_dir",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/b/app",
    },
    "install" => Object {
      "name": "install",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app",
    },
    "bin" => Object {
      "name": "bin",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/bin",
    },
    "sbin" => Object {
      "name": "sbin",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/sbin",
    },
    "lib" => Object {
      "name": "lib",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/lib",
    },
    "man" => Object {
      "name": "man",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/man",
    },
    "doc" => Object {
      "name": "doc",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/doc",
    },
    "stublibs" => Object {
      "name": "stublibs",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/stublibs",
    },
    "toplevel" => Object {
      "name": "toplevel",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/toplevel",
    },
    "share" => Object {
      "name": "share",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/share",
    },
    "etc" => Object {
      "name": "etc",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/etc",
    },
  },
}
`;

exports[`calculating scope in-source build-type 1`] = `
Map {
  "app" => Map {
    "name" => Object {
      "name": "name",
      "origin": BuildSpec { id: "app" },
      "value": "app",
    },
    "version" => Object {
      "name": "version",
      "origin": BuildSpec { id: "app" },
      "value": "0.1.0",
    },
    "root" => Object {
      "name": "root",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/b/app",
    },
    "original_root" => Object {
      "name": "original_root",
      "origin": BuildSpec { id: "app" },
      "value": "<sandboxPath>/app",
    },
    "depends" => Object {
      "name": "depends",
      "origin": BuildSpec { id: "app" },
      "value": "",
    },
    "target_dir" => Object {
      "name": "target_dir",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/b/app",
    },
    "install" => Object {
      "name": "install",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app",
    },
    "bin" => Object {
      "name": "bin",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/bin",
    },
    "sbin" => Object {
      "name": "sbin",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/sbin",
    },
    "lib" => Object {
      "name": "lib",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/lib",
    },
    "man" => Object {
      "name": "man",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/man",
    },
    "doc" => Object {
      "name": "doc",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/doc",
    },
    "stublibs" => Object {
      "name": "stublibs",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/stublibs",
    },
    "toplevel" => Object {
      "name": "toplevel",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/toplevel",
    },
    "share" => Object {
      "name": "share",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/share",
    },
    "etc" => Object {
      "name": "etc",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/etc",
    },
  },
  "self" => Map {
    "name" => Object {
      "name": "name",
      "origin": BuildSpec { id: "app" },
      "value": "app",
    },
    "version" => Object {
      "name": "version",
      "origin": BuildSpec { id: "app" },
      "value": "0.1.0",
    },
    "root" => Object {
      "name": "root",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/b/app",
    },
    "original_root" => Object {
      "name": "original_root",
      "origin": BuildSpec { id: "app" },
      "value": "<sandboxPath>/app",
    },
    "depends" => Object {
      "name": "depends",
      "origin": BuildSpec { id: "app" },
      "value": "",
    },
    "target_dir" => Object {
      "name": "target_dir",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/b/app",
    },
    "install" => Object {
      "name": "install",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app",
    },
    "bin" => Object {
      "name": "bin",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/bin",
    },
    "sbin" => Object {
      "name": "sbin",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/sbin",
    },
    "lib" => Object {
      "name": "lib",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/lib",
    },
    "man" => Object {
      "name": "man",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/man",
    },
    "doc" => Object {
      "name": "doc",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/doc",
    },
    "stublibs" => Object {
      "name": "stublibs",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/stublibs",
    },
    "toplevel" => Object {
      "name": "toplevel",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/toplevel",
    },
    "share" => Object {
      "name": "share",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/share",
    },
    "etc" => Object {
      "name": "etc",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/etc",
    },
  },
}
`;

exports[`calculating scope no deps 1`] = `
Map {
  "app" => Map {
    "name" => Object {
      "name": "name",
      "origin": BuildSpec { id: "app" },
      "value": "app",
    },
    "version" => Object {
      "name": "version",
      "origin": BuildSpec { id: "app" },
      "value": "0.1.0",
    },
    "root" => Object {
      "name": "root",
      "origin": BuildSpec { id: "app" },
      "value": "<sandboxPath>/app",
    },
    "original_root" => Object {
      "name": "original_root",
      "origin": BuildSpec { id: "app" },
      "value": "<sandboxPath>/app",
    },
    "depends" => Object {
      "name": "depends",
      "origin": BuildSpec { id: "app" },
      "value": "",
    },
    "target_dir" => Object {
      "name": "target_dir",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/b/app",
    },
    "install" => Object {
      "name": "install",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app",
    },
    "bin" => Object {
      "name": "bin",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/bin",
    },
    "sbin" => Object {
      "name": "sbin",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/sbin",
    },
    "lib" => Object {
      "name": "lib",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/lib",
    },
    "man" => Object {
      "name": "man",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/man",
    },
    "doc" => Object {
      "name": "doc",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/doc",
    },
    "stublibs" => Object {
      "name": "stublibs",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/stublibs",
    },
    "toplevel" => Object {
      "name": "toplevel",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/toplevel",
    },
    "share" => Object {
      "name": "share",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/share",
    },
    "etc" => Object {
      "name": "etc",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/etc",
    },
  },
  "self" => Map {
    "name" => Object {
      "name": "name",
      "origin": BuildSpec { id: "app" },
      "value": "app",
    },
    "version" => Object {
      "name": "version",
      "origin": BuildSpec { id: "app" },
      "value": "0.1.0",
    },
    "root" => Object {
      "name": "root",
      "origin": BuildSpec { id: "app" },
      "value": "<sandboxPath>/app",
    },
    "original_root" => Object {
      "name": "original_root",
      "origin": BuildSpec { id: "app" },
      "value": "<sandboxPath>/app",
    },
    "depends" => Object {
      "name": "depends",
      "origin": BuildSpec { id: "app" },
      "value": "",
    },
    "target_dir" => Object {
      "name": "target_dir",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/b/app",
    },
    "install" => Object {
      "name": "install",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app",
    },
    "bin" => Object {
      "name": "bin",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/bin",
    },
    "sbin" => Object {
      "name": "sbin",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/sbin",
    },
    "lib" => Object {
      "name": "lib",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/lib",
    },
    "man" => Object {
      "name": "man",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/man",
    },
    "doc" => Object {
      "name": "doc",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/doc",
    },
    "stublibs" => Object {
      "name": "stublibs",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/stublibs",
    },
    "toplevel" => Object {
      "name": "toplevel",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/toplevel",
    },
    "share" => Object {
      "name": "share",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/share",
    },
    "etc" => Object {
      "name": "etc",
      "origin": BuildSpec { id: "app" },
      "value": "<storePath>/s/app/etc",
    },
  },
}
`;
