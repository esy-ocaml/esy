#!/usr/bin/env bash

set -e
set -u
set -o pipefail

if [ -z "${ESY__SANDBOX+x}" ]; then
  export ESY__SANDBOX="$PWD"
fi
if [ -z "${ESY__PREFIX+x}" ]; then
  export ESY__PREFIX="$HOME/.esy"
fi
if [ -z "${ESY__LOCAL_STORE+x}" ]; then
  export ESY__LOCAL_STORE="$ESY__SANDBOX/node_modules/.cache/_esy/store"
fi

esyStrLength() {
  # run in a subprocess to override $LANG variable
  LANG=C /bin/bash -c 'echo "${#0}"' "$1"
}

esyRepeatCharacter() {
  chToRepeat=$1
  times=$2
  printf "%0.s$chToRepeat" $(seq 1 "$times")
}

esyGetStorePathFromPrefix() {
  local esyPrefix="$1"
  local storeVersion="3"
  local prefixLength
  local paddingLength

  # Remove trailing slash if any.
  esyPrefix="${esyPrefix%/}"

  prefixLength=$(esyStrLength "$esyPrefix/$storeVersion")
  paddingLength=$((86 - prefixLength))

  # Discover how much of the reserved relocation padding must be consumed.
  if [ "$paddingLength" -lt "0" ]; then
    echo "$esyPrefix is too deep inside filesystem, Esy won't be able to relocate binaries"
    exit 1;
  fi

  padding=$(esyRepeatCharacter '_' "$paddingLength")
  echo "$esyPrefix/$storeVersion$padding"
}

esyGetStorePathFromPrefix "$ESY__PREFIX"
