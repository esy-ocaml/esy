#!/usr/bin/env bash

set -e

# http://stackoverflow.com/questions/59895/can-a-bash-script-tell-what-directory-its-stored-in
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  SCRIPTDIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$SCRIPTDIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
SCRIPTDIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"

if [ -z "${ESY__PREFIX+x}" ]; then
  export ESY__PREFIX="$HOME/.esy"
fi

printHelp() {
  cat <<EOF
  Usage: $0 [-r/--require <pkg> ...] [--help] [--version] <command>

  <command>               Run a command in the constructed environment.

  --require <pkg>         Add package to the environment.
  -r <pkg>

  --help                  Show this message and exit.
  -h

  --version               Print Esy version.
  -v

EOF
}

printVersion() {
  (cd "$SCRIPTDIR/.." && node -p "require('./package.json').version")
}

REQUIRE=""
COMMAND=""
REQUIRE_ARGS=""

while [ "$1" != "" ]; do
  PARAM=$(echo "$1" | awk -F= '{print $1}')
  VALUE=$(echo "$1" | awk -F= '{print $2}')
  if [ "$COMMAND" != "" ]; then
    COMMAND="$COMMAND $PARAM"
  else
    case $PARAM in

      -h | --help)
        printHelp
        exit
        ;;
      -v | --version)
        printVersion
        exit
        ;;

      -r | --require)
        if [ "$VALUE" == "" ]; then
          VALUE="$2"
          shift
        fi
        REQUIRE="$REQUIRE $VALUE"
        REQUIRE_ARGS="$REQUIRE_ARGS --require $VALUE"
        ;;

      *)
        COMMAND="$COMMAND $PARAM"
        ;;
    esac
  fi
  shift
done

SANDBOX_ID=$(echo "$REQUIRE" | md5)
SANDBOX_PATH="$ESY__PREFIX/sandbox/$SANDBOX_ID"

if [ ! -d "$SANDBOX_PATH" ]; then
  node "$SCRIPTDIR/esy.js" init-global-sandbox $REQUIRE_ARGS "$SANDBOX_PATH"
fi

source "$SANDBOX_PATH/build/bin/command-env"
exec $COMMAND
