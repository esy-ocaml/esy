#!/usr/bin/env bash

set -e
set -u
set -o pipefail

BINDIR=$(dirname "$0")
# shellcheck source=./esyConfig.sh
source "$BINDIR/esyConfig.sh"

packPath="$1"
packName=$(basename "${packPath%.tar.gz}")

stageDir=$(mktemp -d)
stageBuildPath="$stageDir/$packName"

destStorePath=$(esyGetStorePathFromPrefix "$ESY__PREFIX")
destStorePathLen=$(esyStrLen "$destStorePath")

function _do () {
  set -e
  set -u
  set -o pipefail

  local originStorePath

  echo "$packName: importing..."

  if [ -d "$destStorePath/i/$packName" ]; then
    echo "$packName: already exists in store, skipping..."
    exit 0
  fi

  cp "$packPath" "$stageDir/$packName.tar.gz"
  (cd "$stageDir" && tar xzf "$stageDir/$packName.tar.gz")
  originStorePath=$(cat "$stageDir/$packName/_esy/storePrefix")
  originStorePathLen=$(esyStrLen "$originStorePath")

  if [ "$originStorePathLen" -ne "$destStorePathLen" ]; then
    echo "error: unable to import build artefact: store path length mismatch"
    exit 1
  fi

  esyRewriteStorePrefix "$stageBuildPath" "$originStorePath" "$destStorePath"

  mkdir -p "$destStorePath/i"
  mv "$stageBuildPath" "$destStorePath/i"

  echo "$packName: done"
}

set +e
(_do)
ret="$?"
set -e

rm -rf "$stageDir"

if [ $ret -ne 0 ]; then
  exit 1
fi
