#!/usr/bin/env bash

set -e

# http://stackoverflow.com/questions/59895/can-a-bash-script-tell-what-directory-its-stored-in
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  SCRIPTDIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$SCRIPTDIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
SCRIPTDIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"

if [ -z "${ESY__PREFIX+x}" ]; then
  export ESY__PREFIX="$HOME/.esy"
fi

mkdir -p "$ESY__PREFIX"
LOCKFILENAME="$ESY__PREFIX/lock"

set +e

# run bin/_esy and convert failure to exit 2 so we can distinguish between esy
# failure and lock failure
ESY_COMMAND="$SCRIPTDIR/_esy ${@}"
"$SCRIPTDIR/flock" -n "$LOCKFILENAME" bash -c "$ESY_COMMAND || exit 2"

retCode="$?"
if [ $retCode -eq 1 ]; then
  echo >&2 "error: another esy process is running, exiting...";
  echo >&2 "       you can remove $LOCKFILENAME if you are sure that's not the case";
  exit 1
elif [ $retCode -ne 0 ]; then
  exit 1
fi
